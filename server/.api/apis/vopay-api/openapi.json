{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0",
    "title": "Accounts",
    "description": "The Account API defines endpoints for managing VoPay accounts and sub-accounts.  These endpoints allow partners to create and manage accounts, set permissions, handle transactions,  schedule transfers, retrieve account information, and manage onboarding processes, ensuring secure  and efficient account and transaction management.",
    "contact": {
      "name": "API Support",
      "email": "help@vopay.com"
    }
  },
  "paths": {
    "/partner/account": {
      "post": {
        "description": "This endpoint is used to create a VoPay account. You will need to sign-up as a partner account in order to use this endpoint and start creating VoPay accounts for your users.",
        "summary": "partner/account",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "AccountPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "Name": {
                    "description": "Name of the person/company you are going to create an account for",
                    "type": "string"
                  },
                  "EmailAddress": {
                    "description": "Email address of the person/company you are creating an account for",
                    "type": "string",
                    "format": "email"
                  },
                  "Country": {
                    "description": "This is a required parameter specifying the country of the account. ISO abbreviation or full country name",
                    "type": "string"
                  },
                  "ClientAccountsEnabled": {
                    "description": "This is an optional parameter to enable client accounts",
                    "type": "boolean"
                  },
                  "ParentAccountID": {
                    "description": "Specify the parent account ID to create a sub account under this parent account",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "Name",
                  "EmailAddress",
                  "Country"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "Message": {
                      "type": "string",
                      "description": "Contains a description of the successful message",
                      "example": ""
                    },
                    "AccountID": {
                      "type": "string",
                      "description": "Account Name of the new user created in the endpoint",
                      "example": "AccountTest1"
                    },
                    "APISharedSecret": {
                      "type": "string",
                      "description": "API Shared Secret",
                      "example": "AbcDefGi+KlmnopQRSTu183=="
                    },
                    "APIKey": {
                      "type": "string",
                      "description": "The API key for the sub account",
                      "example": "eddc0f5e37d20f98b486daf842447ec1f225f859"
                    },
                    "ApplicationID": {
                      "type": "string",
                      "description": "The onboarding application ID. Only applicable if the account is created in 'Application Pending' status",
                      "example": "213086325897"
                    },
                    "Link": {
                      "type": "string",
                      "description": "The onboarding application link. Only applicable if the account is created in 'Application Pending' status",
                      "example": "https://onboarding-app-dev.vopay.com"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "This endpoint is used to get a list of accounts created using a partner account. It will return the accounts data including shareholder, signing authority and balance information",
        "summary": "partner/account",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "AccountGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit ",
            "in": "query",
            "required": false,
            "description": "Limit the number of records that are returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Offset ",
            "in": "query",
            "required": false,
            "description": "Use this parameter to set the starting point in the dataset.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "PartnerAccount": {
                      "type": "string",
                      "description": "Partner account name",
                      "example": "ParentAccount1"
                    },
                    "Accounts": {
                      "type": "object",
                      "description": "Collection of subaccounts per parent account",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "LegalBusinessName": {
                              "type": "string",
                              "description": "Legal Business Name",
                              "example": "Company Legal Business Name"
                            },
                            "DBAName": {
                              "type": "string",
                              "description": "Doing Business As Name",
                              "example": "Doing Business As Name"
                            },
                            "AccountName": {
                              "type": "string",
                              "description": "Account name of the account",
                              "example": "SubaccountName1"
                            },
                            "ParentAccountName": {
                              "type": "string",
                              "description": "Parent account name. This will only be populated if the account is a sub-account",
                              "example": "ParentAccount1"
                            },
                            "AccountID": {
                              "type": "string",
                              "description": "Account ID of the account",
                              "example": "Subaccount1"
                            },
                            "OrginatorName": {
                              "type": "string",
                              "description": "Short Name of the company to identify themselves in the documents",
                              "example": ""
                            },
                            "OriginatorShortName": {
                              "type": "string",
                              "description": "Short Name of the company to identify themselves in the documents (max 15 chars)",
                              "example": ""
                            },
                            "Email": {
                              "type": "string",
                              "format": "email",
                              "description": "Account email address",
                              "example": "subaccount.mail@email.com"
                            },
                            "Phone": {
                              "type": "integer",
                              "description": "Account's phone number",
                              "example": "604556****"
                            },
                            "Fax": {
                              "type": "string",
                              "description": "Account's fax number",
                              "example": "604556****"
                            },
                            "City": {
                              "type": "string",
                              "description": "Account's city",
                              "example": "Vancouver"
                            },
                            "Province": {
                              "type": "string",
                              "description": "Account's province specified using two character abbreviation (eg. BC, AB)",
                              "example": "BC"
                            },
                            "Country": {
                              "type": "string",
                              "description": "Account's country specified using full country name or ISO 3166-1 alpha-2 code.",
                              "example": "Canada"
                            },
                            "PostalCode": {
                              "type": "string",
                              "description": "Account's postal code.",
                              "example": "V2W 4V6"
                            },
                            "Address": {
                              "type": "string",
                              "description": "Account's address line",
                              "example": "112 Bentall Street"
                            },
                            "FlinksUrl": {
                              "type": "string",
                              "description": "The Flinks URL",
                              "example": "https://www.mycompany.com/flinks-url"
                            },
                            "WebhookUrl": {
                              "type": "string",
                              "description": "URL where the users want us to send their notifications. See Webhooks attribute for full list.",
                              "example": "https://www.mycompany.com/webhook-listener"
                            },
                            "Webhooks": {
                              "type": "object",
                              "description": "Collection of webhook event types configured",
                              "properties": {
                                "0": {
                                  "type": "object",
                                  "properties": {
                                    "Event": {
                                      "type": "string",
                                      "description": "The type of webhook notification the users wish to receive. Options are: transaction, paylink, bankaccount, debitcard, creditcard, batchrequest, batchdetail, accountonboarding, accountonboardingapplication, scheduledtransactions, accountverifications, virtualtransaction.",
                                      "example": ""
                                    },
                                    "Url": {
                                      "type": "string",
                                      "description": "Webhook URL, is the url is not setup it will return empty",
                                      "example": ""
                                    }
                                  }
                                }
                              }
                            },
                            "IsActive": {
                              "type": "boolean",
                              "description": "Is the account active",
                              "example": "true"
                            },
                            "GCMEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Global cash management",
                              "example": "true"
                            },
                            "EFTCollectEnabled": {
                              "type": "boolean",
                              "description": "Permission related to EFT Fund",
                              "example": "true"
                            },
                            "EFTSendEnabled": {
                              "type": "boolean",
                              "description": "Permission related to EFT Withdraw",
                              "example": "true"
                            },
                            "USDEFTCollectEnabled": {
                              "type": "boolean",
                              "description": "Permission related to EFT Fund using USD currency",
                              "example": "true"
                            },
                            "USDEFTSendEnabled": {
                              "type": "boolean",
                              "description": "Permission related to EFT Withdraw using USD currency",
                              "example": "true"
                            },
                            "RTRWithdrawEnabled": {
                              "type": "boolean",
                              "description": "Permission related to VoPay Instant Withdraw",
                              "example": "true"
                            },
                            "VisaDirectEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Visa Direct",
                              "example": "true"
                            },
                            "InteracMoneyRequestEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Interac Money request",
                              "example": "true"
                            },
                            "InteracBulkPayoutEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Interac bulk payout",
                              "example": "true"
                            },
                            "PayLinkEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Paylink",
                              "example": "true"
                            },
                            "PortalViewOnly": {
                              "type": "boolean",
                              "description": "This flag will change the user permission to the admin portal. When true, the user will have 'Read Only' permission and when false, the user will be able to create transactions using the admin portal.",
                              "example": true
                            },
                            "AddUserEnabled": {
                              "type": "boolean",
                              "description": "True if the user wants to enable this feature. This flag allow the user to add users to the accounts",
                              "example": true
                            },
                            "TransactionApprovalWorkflowEnabled": {
                              "type": "boolean",
                              "description": "Permission related to the transaction approval workflows",
                              "example": true
                            },
                            "AutoBalanceTransferEnabled": {
                              "type": "boolean",
                              "description": "True if the user wants to enable this feature. This flag allow the user to set auto transfer balance",
                              "example": true
                            },
                            "MaxFundEFTAmount": {
                              "type": "number",
                              "description": "Maximum amount that the user can transfer using this endpoint",
                              "example": 4500
                            },
                            "MaxWithdrawEFTAmount": {
                              "type": "number",
                              "description": "Maximum amount that the user can transfer using this endpoint",
                              "example": 4500
                            },
                            "MaxGCMAmount": {
                              "type": "number",
                              "description": "Maximum amount that the user can transfer using this endpoint",
                              "example": 4500
                            },
                            "MaxInteracMoneyAmount": {
                              "type": "number",
                              "description": "Maximum amount that the user can transfer using this endpoint",
                              "example": 4500
                            },
                            "MaxInteracBulkPayoutAmount": {
                              "type": "number",
                              "description": "Maximum amount that the user can transfer using this endpoint",
                              "example": 4500
                            },
                            "MaxVisaDirectAmount": {
                              "type": "number",
                              "description": "Maximum amount that the user can transfer using this endpoint",
                              "example": 4500
                            },
                            "Balances": {
                              "type": "object",
                              "description": "Collection of the balances of the account",
                              "properties": {
                                "0": {
                                  "type": "object",
                                  "properties": {
                                    "Currency": {
                                      "type": "string",
                                      "description": "3 character currency code for the balance being returned.",
                                      "example": "CAD"
                                    },
                                    "AccountBalance": {
                                      "type": "number",
                                      "description": "Indicates the total current account balance, including pending funds.",
                                      "example": "20000.00"
                                    },
                                    "PendingBalance": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is pending due to in-progress transactions.",
                                      "example": "5540.24"
                                    },
                                    "Reserve": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is being held as a reserve against negative balances.",
                                      "example": "50000.00"
                                    },
                                    "RollingReserveNSF": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is being held as a reserve against NSF transactions.",
                                      "example": "10000.00"
                                    },
                                    "RollingReserveReturns": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is being held as a reserve against returned transactions.",
                                      "example": "1000.00"
                                    },
                                    "AvailableImmediately": {
                                      "type": "number",
                                      "description": "Indicate the portion of the account balance that is available immediately",
                                      "example": "0.00"
                                    },
                                    "AvailableBalance": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is currently available for use. This is calculated by taking the AccountBalance and subtracting the PendingFunds, Reserve, RollingReserveNSF, and RollingReserveReturns amounts.",
                                      "example": "18000.00"
                                    }
                                  }
                                }
                              }
                            },
                            "ShareHolders": {
                              "type": "object",
                              "description": "Collection of Share Holders per account",
                              "properties": {
                                "0": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "integer",
                                      "description": "Shareholder ID",
                                      "example": ""
                                    },
                                    "FullName": {
                                      "type": "string",
                                      "description": "Shareholder First name and last name",
                                      "example": "Share holder name"
                                    },
                                    "Ownership": {
                                      "type": "string",
                                      "description": "Percentage of ownership only if is greater than 20%",
                                      "example": "20"
                                    },
                                    "Occupation": {
                                      "type": "string",
                                      "description": "Shareholder's occupation",
                                      "example": ""
                                    },
                                    "HomeAddress": {
                                      "type": "string",
                                      "description": "Shareholder's home address",
                                      "example": "123 address st, Vancouver"
                                    },
                                    "DateAdded": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "",
                                      "example": "2019-11-03 01:00:00"
                                    }
                                  }
                                }
                              }
                            },
                            "SigningAuthorities": {
                              "type": "object",
                              "description": "Collection of Signing Authorities per account",
                              "properties": {
                                "0": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "integer",
                                      "description": "Signing Authority ID",
                                      "example": ""
                                    },
                                    "FullName": {
                                      "type": "string",
                                      "description": "Signing Authority First name and last name",
                                      "example": "Signing Authority name"
                                    },
                                    "Occupation": {
                                      "type": "string",
                                      "description": "Signing Authority's occupation",
                                      "example": ""
                                    },
                                    "EmailAddress": {
                                      "type": "string",
                                      "description": "Signing Authority's email address",
                                      "example": "signingauthority@gmail.com"
                                    },
                                    "HomeAddress": {
                                      "type": "string",
                                      "description": "Signing Authority's home address",
                                      "example": "123 address st, Vancouver"
                                    },
                                    "DateAdded": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "",
                                      "example": "2019-11-03 01:00:00"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Pagination": {
                      "type": "object",
                      "description": "Pagination metadata",
                      "properties": {
                        "TotalRecords": {
                          "type": "string",
                          "description": "Total number of account records in that search range.",
                          "example": "1000"
                        },
                        "Offset": {
                          "type": "string",
                          "description": "Use this parameter to set the starting point in the dataset.",
                          "example": "1000"
                        },
                        "Limit": {
                          "type": "string",
                          "description": "Limit the number of records that are returned.",
                          "example": "1000"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/account/business-case": {
      "post": {
        "description": "This endpoint is used to provide the use cases for the VoPay account you are onboarding.",
        "summary": "partner/account/business-case",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "AccountBusinessCasePOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "VopayAccountID": {
                    "description": "The account ID for whom you are provding the business case info.",
                    "type": "string"
                  },
                  "BusinessName": {
                    "description": "Name of the company for whom you are providing the business case info",
                    "type": "string"
                  },
                  "BusinessEmail": {
                    "description": "Name of the company for whom you are providing the business case info",
                    "type": "string"
                  },
                  "DoingBusinessAs": {
                    "description": "A brief description of the business activities of the VoPay account",
                    "type": "string"
                  },
                  "WebsiteURL": {
                    "description": "Website URL",
                    "type": "string"
                  },
                  "BusinessModel": {
                    "description": "Describe the current product or services you offer",
                    "type": "string"
                  },
                  "MSB": {
                    "description": "Are you a Medium Small Business?",
                    "type": "boolean"
                  },
                  "NumberofYearsInBusiness": {
                    "description": "Number of Years in Business",
                    "type": "number"
                  },
                  "InteracETransferCurrent": {
                    "description": "Do you currently have Interac E-Transfer service",
                    "type": "boolean"
                  },
                  "VisaMastercardProcessingCurrent": {
                    "description": "Do you currently have Visa Mastercard Processing service",
                    "type": "boolean"
                  },
                  "VisaDirectMCSendCurrent": {
                    "description": "Do you currently have Visa Direct Mastercard Send service",
                    "type": "boolean"
                  },
                  "EFTCurrent": {
                    "description": "Do you currently have EFT service",
                    "type": "boolean"
                  },
                  "VirtualAccountsCurrent": {
                    "description": "Do you currently have Virtual Accounts",
                    "type": "boolean"
                  },
                  "NoneOfTheAboveCurrent": {
                    "description": "You don't have any of the services mentioned above",
                    "type": "boolean"
                  },
                  "EFTiQ11Required": {
                    "description": "Will the VoPay account require the IQ11 service.",
                    "type": "boolean"
                  },
                  "EFTRequired": {
                    "description": "Will the VoPay account require the EFT service.",
                    "type": "boolean"
                  },
                  "ETransferBulkPayoutRequired": {
                    "description": "Will the VoPay account require the Interac payout service.",
                    "type": "boolean"
                  },
                  "ETransferMoneyRequestRequired": {
                    "description": "Will the VoPay account require the Interac money request service.",
                    "type": "boolean"
                  },
                  "VisaDirectMCSendRequired": {
                    "description": "Will the VoPay account require the Visa Direct service.",
                    "type": "boolean"
                  },
                  "VisaMastercardProcessingRequired": {
                    "description": "Will the VoPay account require the Visa Mastercard Processing service.",
                    "type": "boolean"
                  },
                  "InboundEtransferRequired": {
                    "description": "Will the VoPay account require the Inbound E-transfer service.",
                    "type": "boolean"
                  },
                  "VirtualAccountsRequired": {
                    "description": "Will the VoPay account require Virtual Account service.",
                    "type": "boolean"
                  },
                  "OtherRequired": {
                    "description": "Will the VoPay account require other services not listed.",
                    "type": "boolean"
                  },
                  "OtherRequiredServies": {
                    "description": "Please specify the service required.",
                    "type": "string"
                  },
                  "EFTPushTotalTransactionCount": {
                    "description": "What is the daily estimated EFT Push Transactions to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPushTotalTransactionAmount": {
                    "description": "What is the daily estimated average EFT Push Total Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPushTransactionAverage": {
                    "description": "What is the daily estimated EFT Push Transaction Average Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPushMinimumTransactionAmount": {
                    "description": "What is the daily estimated EFT Push Minimum Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPushMaximumTransactionAmount": {
                    "description": "What is the daily estimated EFT Push Maximum Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPullTotalTransactionCount": {
                    "description": "What is the daily estimated EFT Pull Total Transactions to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPullTotalTransactionAmount": {
                    "description": "What is the daily estimated EFT Pull Total Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPullAverageTransactionAmount": {
                    "description": "What is the daily estimated EFT Pull Average Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPullMinimumTransactionAmount": {
                    "description": "What is the daily estimated EFT Pull Minimum Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "EFTPullMaximumTransactionAmount": {
                    "description": "What is the daily estimated EFT Pull Maximum Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferSendTotalTransactionCount": {
                    "description": "What is the daily estimated E-Transfer (Send) Total Transactions to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferSendTotalTransactionAmount": {
                    "description": "What is the daily estimated E-Transfer (Send) Total Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferSendAverageTransactionAmount": {
                    "description": "What is the daily estimated E-Transfer (Send) Average Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferSendMinimumTransactionAmount": {
                    "description": "What is the daily estimated E-Transfer (Send) Minimum Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferSendMaximumTransactionAmount": {
                    "description": "What is the daily estimated E-Transfer (Send) Maximum Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferRequestDailyTransactionCount": {
                    "description": "What is the daily estimated E-Transfer (Request) Total Transactions to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferRequestDailyTransactionTotal": {
                    "description": "What is the daily estimated E-Transfer (Request) Total Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferRequestAverageTransactionAmount": {
                    "description": "What is the daily estimated E-Transfer (Request) Average Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferRequestMinimumTransactionAmount": {
                    "description": "What is the daily estimated E-Transfer (Request) Minimum Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "ETransferRequestMaximumTransactionAmount": {
                    "description": "What is the daily estimated E-Transfer (Request) Maximum Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "DomesticDebitPayoutAnnualTransactionCount": {
                    "description": "What is the estimated Domestic Payout Annual Transactions via Visa Direct / Mastercard to be executed by this VoPay account",
                    "type": "number"
                  },
                  "DomesticDebitPayoutAnnualTransactionAmountTotal": {
                    "description": "What is the estimated Domestic Payout Annual Transaction Amount Total via Visa Direct / Mastercard to be executed by this VoPay account",
                    "type": "number"
                  },
                  "DomesticDebitPayoutAnnualAverageTransactionAmount": {
                    "description": "What is the estimated Domestic Payout Annual Average Transaction Amount via Visa Direct / Mastercard to be executed by this VoPay account",
                    "type": "number"
                  },
                  "DomesticDebitPayoutAnnualMaximumTransactionAmount": {
                    "description": "What is the estimated Domestic Payout Annual Maximum Transaction Amount via Visa Direct / Mastercard to be executed by this VoPay account",
                    "type": "number"
                  },
                  "DomesticDebitPayInsAnnualTransactionCount": {
                    "description": "What is the estimated Domestic Pay-Ins Annual Transactions via Visa Direct / Mastercard to be executed by this VoPay account",
                    "type": "number"
                  },
                  "DomesticDebitPayInsAnnualTransactionAmountTotal": {
                    "description": "What is the estimated annual Domestic Pay-Ins Annual Transaction Amount Total via Visa Direct / Mastercard to be executed by this VoPay account",
                    "type": "number"
                  },
                  "DomesticDebitPayInsAnnualAverageTransactionAmount": {
                    "description": "What is the estimated annual Domestic Pay-Ins Annual Average Transaction Amount via Visa Direct / Mastercard to be executed by this VoPay account",
                    "type": "number"
                  },
                  "DomesticDebitPayInsAnnualMaximumTransactionAmount": {
                    "description": "What is the estimated annual Domestic Pay-Ins Annual Maximum Transaction Amount via Visa Direct / Mastercard to be executed by this VoPay account",
                    "type": "number"
                  },
                  "RegisteredISO": {
                    "description": "Are you a registered ISO?",
                    "type": "boolean"
                  },
                  "NumberOfMerchant": {
                    "description": "If you are a registered ISO, please provide the number of merchants you work with",
                    "type": "number"
                  },
                  "CardProcessingAnnualTransactionCount": {
                    "description": "What is the estimated annual Card Processing Annual Transactions to be executed by this VoPay account",
                    "type": "number"
                  },
                  "CardProcessingAnnualTransactionAmount": {
                    "description": "What is the estimated annual Card Processing Annual Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "CardProcessingAverageTransactionAmount": {
                    "description": "What is the estimated annual Card Processing Average Transaction Amount to be executed by this VoPay account",
                    "type": "number"
                  },
                  "NumberofVirtualAccounts": {
                    "description": "Number of Virtual Accounts required",
                    "type": "number"
                  },
                  "NumberofDebitorCreditTransactionsPerAccount": {
                    "description": "What is the estimated annual Number of Debit or Credit Transactions per account to be executed by this VoPay account",
                    "type": "number"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "VopayAccountID",
                  "BusinessName",
                  "BusinessEmail",
                  "DoingBusinessAs",
                  "WebsiteURL",
                  "BusinessModel",
                  "MSB",
                  "NumberofYearsInBusiness"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/account/set-permissions": {
      "post": {
        "description": "This endpoint will allow a partner to modify the permissions and the maximum amounts for their accounts.",
        "summary": "partner/account/set-permissions",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "AccountSetPermissionsPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "VopayAccountID": {
                    "description": "This field is to apply the permissions to only one account.",
                    "type": "string"
                  },
                  "ApplyToAll": {
                    "description": "This flag will allow the Main account to modify the permissions of all their sub-accounts at once, no matter if the sub account is active or inactive. This field only accepts true as a value",
                    "type": "boolean"
                  },
                  "GCMEnabled": {
                    "description": "Permission related to Global cash management, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "EFTCollectEnabled": {
                    "description": "Permission related to EFT Fund, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "EFTSendEnabled": {
                    "description": "Permission related to EFT Withdraw, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "USDEFTCollectEnabled": {
                    "description": "Permission related to EFT Fund using USD currency with a Canadian bank account, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "USDEFTSendEnabled": {
                    "description": "Permission related to EFT Withdraw using USD currency with a Canadian bank account, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "RTRWithdrawEnabled": {
                    "description": "Permission related to VoPay Instant Withdraw, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "PushToCardEnabled": {
                    "description": "Permission related to Push to Card service. True if the user wants to enable this feature to send funds directly to debit cards",
                    "type": "boolean"
                  },
                  "AFTEnabled": {
                    "description": "Permission related to Automated Funds Transfer. True if the user wants to enable debti card funding transactions",
                    "type": "boolean"
                  },
                  "InteracMoneyRequestEnabled": {
                    "description": "Permission related to Interac Money request, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "TransactionApprovalWorkflowEnabled": {
                    "description": "True if the user wants to enable this feature. This flag enables transaction approval workflows requiring approvals before transactions are processed",
                    "type": "boolean"
                  },
                  "IQ11Enabled": {
                    "description": "True if the user wants to enable this feature. This flag allow the user to activate IQ11 functionality",
                    "type": "boolean"
                  },
                  "IQ11StandardEnabled": {
                    "description": "Permission related to IQ11 Boost tier. True if the user wants to enable this enhanced level of bank account verification service",
                    "type": "boolean"
                  },
                  "IQ11BoostEnabled": {
                    "description": "Permission related to IQ11 Boost tier. True if the user wants to enable this enhanced level of bank account verification service",
                    "type": "boolean"
                  },
                  "IQ11PlusEnabled": {
                    "description": "Permission related to IQ11 Plus tier. True if the user wants to enable this premium level of bank account verification service",
                    "type": "boolean"
                  },
                  "IQ11AdvantageEnabled": {
                    "description": "Permission related to IQ11 Advantage tier. True if the user wants to enable this enterprise level of bank account verification service",
                    "type": "boolean"
                  },
                  "DebitAuthorityAgreementsRequired": {
                    "description": "True if debit authority agreements are required before processing transactions. This adds an additional verification step for compliance purposes",
                    "type": "boolean"
                  },
                  "InteracBulkPayoutEnabled": {
                    "description": "Permission related to Interac bulk payout, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "TransactionLabelOverrideEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allows customization of transaction labels that appear on bank statements",
                    "type": "boolean"
                  },
                  "AutoBalanceTransferEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allow the user to set auto transfer balance",
                    "type": "boolean"
                  },
                  "PayLinkEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allow the user to activate PayLink functionality",
                    "type": "boolean"
                  },
                  "MicroDepositBankAccountVerificationEnabled": {
                    "description": "True if the user wants to enable this feature. This flag activates additional verification to confirm bank account ownership",
                    "type": "boolean"
                  },
                  "InteracBasicVerificationEnabled": {
                    "description": "True if the user wants to enable this feature. This flag activates additional verification to confirm basic Interac registration info",
                    "type": "boolean"
                  },
                  "InteracEnhancedVerificationEnabled": {
                    "description": "True if the user wants to enable this feature. This flag activates additional verification to confirm enhanced Interac registration info",
                    "type": "boolean"
                  },
                  "CardBasicVerificationEnabled": {
                    "description": "True if the user wants to enable this feature. This flag activates additional verification to confirm basic card ownership",
                    "type": "boolean"
                  },
                  "CardEnhancedVerificationEnabled": {
                    "description": "True if the user wants to enable this feature. This flag activates additional verification to confirm enhanced card ownership",
                    "type": "boolean"
                  },
                  "ClientAccountsEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allows the creation and management of client accounts",
                    "type": "boolean"
                  },
                  "ThirdPartyClientAccountTransactionsEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allows transactions to be processed for third-party client accounts",
                    "type": "boolean"
                  },
                  "AccountTransferEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allows transferring funds between accounts within the system",
                    "type": "boolean"
                  },
                  "FailNSFTransactions": {
                    "description": "True if the user wants to enable this feature. This flag automatically fails transactions if insufficient funds are detected",
                    "type": "boolean"
                  },
                  "FlagDuplicateTransactions": {
                    "description": "True if the user wants to enable this feature. This flag marks potentially duplicate transactions for review",
                    "type": "boolean"
                  },
                  "CreditCardEnabled": {
                    "description": "Permission related to Credit Cards, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "ACHFundEnabled": {
                    "type": "boolean"
                  },
                  "ACHWithdrawEnabled": {
                    "type": "boolean"
                  },
                  "SameDayACHFundEnabled": {
                    "type": "boolean"
                  },
                  "SameDayACHWithdrawEnabled": {
                    "type": "boolean"
                  },
                  "FedwireFundEnabled": {
                    "type": "boolean"
                  },
                  "FedwireWithdrawEnabled": {
                    "type": "boolean"
                  },
                  "CPAFileGenerationEnabled": {
                    "type": "boolean"
                  },
                  "UniversalClientAccountsEnabled": {
                    "type": "boolean"
                  },
                  "MoneyRequestGenerateUrlEnabled": {
                    "type": "boolean"
                  },
                  "AccountingSoftwareIntegrationEnabled": {
                    "type": "boolean"
                  },
                  "AutoRecoverNSFEnabled": {
                    "type": "boolean"
                  },
                  "VirtualAccountsEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allows the user to create and manage virtual accounts",
                    "type": "boolean"
                  },
                  "InboundEtransferEnabled": {
                    "description": "Permission related to Inbound E-transfer service. True if the user wants to enable receiving funds via email money transfers",
                    "type": "boolean"
                  },
                  "ACHHoldReleaseIQ11": {
                    "type": "boolean"
                  },
                  "ACHHoldRelease": {
                    "type": "boolean"
                  },
                  "RTPWithdrawEnabled": {
                    "type": "boolean"
                  },
                  "FednowWithdrawEnabled": {
                    "type": "boolean"
                  },
                  "CrossborderInclusive": {
                    "type": "boolean"
                  },
                  "BrandingEmailEnabled": {
                    "type": "boolean"
                  },
                  "BrandingELinxEnabled": {
                    "type": "boolean"
                  },
                  "BrandingPortalEnabled": {
                    "type": "boolean"
                  },
                  "BrandingOnboardingEnabled": {
                    "type": "boolean"
                  },
                  "FlagHighRiskIp": {
                    "type": "boolean"
                  },
                  "LowBalanceAlertEnabled": {
                    "type": "boolean"
                  },
                  "JournalEntryEnabled": {
                    "type": "boolean"
                  },
                  "InterestAccountEnabled": {
                    "type": "boolean"
                  },
                  "MaxFundEFTAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (EFT fund)",
                    "type": "number"
                  },
                  "MaxWithdrawEFTAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (EFT withdraw)",
                    "type": "number"
                  },
                  "MaxACHFundAmount": {
                    "type": "number"
                  },
                  "MaxACHWithdrawAmount": {
                    "type": "number"
                  },
                  "SameDayMaxACHFundAmount": {
                    "type": "number"
                  },
                  "SameDayMaxACHWithdrawAmount": {
                    "type": "number"
                  },
                  "MaxFedwireFundAmount": {
                    "type": "number"
                  },
                  "MaxFedwireWithdrawAmount": {
                    "type": "number"
                  },
                  "MaxGCMAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (GMC)",
                    "type": "number"
                  },
                  "MaxInteracMoneyAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (Interac Money request)",
                    "type": "number"
                  },
                  "MaxInteracBulkPayoutAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (Interac bulk payout)",
                    "type": "number"
                  },
                  "MaxPushToCardAmount": {
                    "type": "number"
                  },
                  "MaxAFTAmount": {
                    "type": "number"
                  },
                  "MaxFundMyAccountAmount": {
                    "type": "number"
                  },
                  "MaxWithdrawMyAccountAmount": {
                    "description": "Maximum amount that the user can transfer to their own bank account",
                    "type": "number"
                  },
                  "MaxRTRWithdrawAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (VoPay Instant withdraw)",
                    "type": "number"
                  },
                  "MaxRTPWithdrawAmount": {
                    "type": "number"
                  },
                  "MaxFednowWithdrawAmount": {
                    "type": "number"
                  },
                  "AutoBalanceTransferAmount": {
                    "type": "number"
                  },
                  "EFTHoldReleaseNonIQ11": {
                    "type": "number"
                  },
                  "BusinessAccountTransactionLimit": {
                    "type": "number"
                  },
                  "IndividualAccountTransactionLimit": {
                    "type": "number"
                  },
                  "ReceiveOnlyAccountTransactionLimit": {
                    "type": "number"
                  },
                  "StandardAccountTransactionLimit": {
                    "type": "number"
                  },
                  "InteracHoldRelease": {
                    "type": "number"
                  },
                  "MaxCrossborderWithdrawAmount": {
                    "type": "number"
                  },
                  "DailyLimitInboundBankAccount": {
                    "type": "number"
                  },
                  "DailyLimitAmountInboundBankAccount": {
                    "type": "number"
                  },
                  "WeeklyLimitInboundBankAccount": {
                    "type": "number"
                  },
                  "WeeklyLimitAmountInboundBankAccount": {
                    "type": "number"
                  },
                  "MonthlyLimitInboundBankAccount": {
                    "type": "number"
                  },
                  "MonthlyLimitAmountInboundBankAccount": {
                    "type": "number"
                  },
                  "DailyLimitInboundEmailAddress": {
                    "type": "number"
                  },
                  "DailyLimitAmountInboundEmailAddress": {
                    "type": "number"
                  },
                  "WeeklyLimitInboundEmailAddress": {
                    "type": "number"
                  },
                  "WeeklyLimitAmountInboundEmailAddress": {
                    "type": "number"
                  },
                  "MonthlyLimitInboundEmailAddress": {
                    "type": "number"
                  },
                  "MonthlyLimitAmountInboundEmailAddress": {
                    "type": "number"
                  },
                  "DailyLimitInboundDebitCard": {
                    "type": "number"
                  },
                  "DailyLimitAmountInboundDebitCard": {
                    "type": "number"
                  },
                  "WeeklyLimitInboundDebitCard": {
                    "type": "number"
                  },
                  "WeeklyLimitAmountInboundDebitCard": {
                    "type": "number"
                  },
                  "MonthlyLimitInboundDebitCard": {
                    "type": "number"
                  },
                  "MonthlyLimitAmountInboundDebitCard": {
                    "type": "number"
                  },
                  "DailyLimitInboundCreditCard": {
                    "type": "number"
                  },
                  "DailyLimitAmountInboundCreditCard": {
                    "type": "number"
                  },
                  "WeeklyLimitInboundCreditCard": {
                    "type": "number"
                  },
                  "WeeklyLimitAmountInboundCreditCard": {
                    "type": "number"
                  },
                  "MonthlyLimitInboundCreditCard": {
                    "type": "number"
                  },
                  "MonthlyLimitAmountInboundCreditCard": {
                    "type": "number"
                  },
                  "DailyLimitOutboundBankAccount": {
                    "type": "number"
                  },
                  "DailyLimitAmountOutboundBankAccount": {
                    "type": "number"
                  },
                  "WeeklyLimitOutboundBankAccount": {
                    "type": "number"
                  },
                  "WeeklyLimitAmountOutboundBankAccount": {
                    "type": "number"
                  },
                  "MonthlyLimitOutboundBankAccount": {
                    "type": "number"
                  },
                  "MonthlyLimitAmountOutboundBankAccount": {
                    "type": "number"
                  },
                  "DailyLimitOutboundEmailAddress": {
                    "type": "number"
                  },
                  "DailyLimitAmountOutboundEmailAddress": {
                    "type": "number"
                  },
                  "WeeklyLimitOutboundEmailAddress": {
                    "type": "number"
                  },
                  "WeeklyLimitAmountOutboundEmailAddress": {
                    "type": "number"
                  },
                  "MonthlyLimitOutboundEmailAddress": {
                    "type": "number"
                  },
                  "MonthlyLimitAmountOutboundEmailAddress": {
                    "type": "number"
                  },
                  "DailyLimitOutboundDebitCard": {
                    "type": "number"
                  },
                  "DailyLimitAmountOutboundDebitCard": {
                    "type": "number"
                  },
                  "WeeklyLimitOutboundDebitCard": {
                    "type": "number"
                  },
                  "WeeklyLimitAmountOutboundDebitCard": {
                    "type": "number"
                  },
                  "MonthlyLimitOutboundDebitCard": {
                    "type": "number"
                  },
                  "MonthlyLimitAmountOutboundDebitCard": {
                    "type": "number"
                  },
                  "DailyLimitInboundAmount": {
                    "type": "number"
                  },
                  "WeeklyLimitInboundAmount": {
                    "type": "number"
                  },
                  "MonthlyLimitInboundAmount": {
                    "type": "number"
                  },
                  "MonthlyInboundTransactionLimit": {
                    "type": "number"
                  },
                  "DailyLimitOutboundAmount": {
                    "type": "number"
                  },
                  "WeeklyLimitOutboundAmount": {
                    "type": "number"
                  },
                  "MonthlyLimitOutboundAmount": {
                    "type": "number"
                  },
                  "MonthlyOutboundTransactionLimit": {
                    "type": "number"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/billing-packages": {
      "get": {
        "description": "This endpoint is used to retrieve the list of billing packages that you can assign to an account.",
        "summary": "partner/billing-packages",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "PartnerBillingPackagesGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "BillingPackages": {
                      "type": "object",
                      "description": "Collection of billing packages you can assign to your VoPay accounts",
                      "properties": {
                        "0": {
                          "type": "object",
                          "description": "Billing package info",
                          "properties": {
                            "PackageID": {
                              "type": "number",
                              "description": "Unique ID of the billing package",
                              "example": "1234"
                            },
                            "PackageName": {
                              "type": "string",
                              "description": "Name of the billing package",
                              "example": "Enterprise Billing Package"
                            },
                            "DateAdded": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the bank account was added",
                              "example": "2019-11-03 01:00:00"
                            },
                            "CreatedBy": {
                              "type": "string",
                              "description": "Creator of the billing package (either VoPay or Partner name)",
                              "example": "ABC Partner"
                            },
                            "Currency": {
                              "type": "string",
                              "description": "3 character currency code for the billing package",
                              "example": "CAD"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/invoice-details": {
      "get": {
        "description": "This endpoint is used to retrieve the invoice-details (number of transactions, rates, etc) for a given billing cycle. If no month/year is provided, the current month/year is used.",
        "summary": "partner/invoice-details",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "PartnerInvoiceDetailsGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VopayAccountID",
            "in": "query",
            "required": false,
            "description": "Only returns billing info for this VoPay account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "description": "Billing cycle month (eg: 03). Defaults to current month",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "description": "Billing cycle year (eg: 2021). Defaults to current year",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "InvoicePeriod": {
                      "type": "object",
                      "description": "Invoice Period",
                      "properties": {
                        "FromDate": {
                          "type": "string",
                          "description": "Invoice Start Date",
                          "example": "2021-10-01"
                        },
                        "ToDate": {
                          "type": "string",
                          "description": "Invoice End Date",
                          "example": "2021-10-31"
                        }
                      }
                    },
                    "InvoiceDetails": {
                      "type": "object",
                      "description": "Invoice Details for for each account for the invoice period",
                      "properties": {
                        "AccountID": {
                          "type": "object",
                          "description": "Invoice details for the Account ID",
                          "properties": {
                            "Currency": {
                              "type": "object",
                              "description": "3 character currency code of the invoice; ex: CAD",
                              "properties": {
                                "Service": {
                                  "type": "object",
                                  "description": "Service being billed; ex: EFTFunding",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "description": "Description of the service being billed",
                                      "example": "EFT Funding Transaction fee"
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "description": "Number of transactions",
                                      "example": "50"
                                    },
                                    "rate": {
                                      "type": "number",
                                      "description": "Cost per transaction",
                                      "example": "1.50"
                                    },
                                    "amount": {
                                      "type": "number",
                                      "description": "Total cost of service (quantity x rate)",
                                      "example": "75"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/account/transactions": {
      "get": {
        "description": "This endpoint is used to fetch all the transactions belonging to your accounts",
        "summary": "partner/account/transactions",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "PartnerAccountTransactionsURLGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VopayAccountID",
            "in": "query",
            "required": false,
            "description": "Your VoPay account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TransactionType",
            "in": "query",
            "required": false,
            "description": "The transaction type for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": false,
            "description": "Transaction start date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": false,
            "description": "Transaction end date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SettlementDate",
            "in": "query",
            "required": false,
            "description": "Transaction settlement date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "description": "The transaction status.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Currency",
            "in": "query",
            "required": false,
            "description": "The transaction currency.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TransactionID",
            "in": "query",
            "required": false,
            "description": "The transaction ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionsCount": {
                      "type": "number",
                      "description": "Total number of all the transactions",
                      "example": ""
                    },
                    "Transactions": {
                      "type": "string",
                      "description": "JSON object containing all the transactions",
                      "example": "{'TransactionID': 'TransactionID', 'TransactionType': 'TransactionType'}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/account/transfer": {
      "post": {
        "description": "This endpoint allows you to transfer funds between VoPay accounts.",
        "summary": "partner/account/transfer",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "PartnerAccountTransferPost",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "DebitorAccountID": {
                    "description": "ID of the account transferring the funds",
                    "type": "string"
                  },
                  "RecipientAccountID": {
                    "description": "ID of the account receiving the funds",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The transfer amount.",
                    "type": "number"
                  },
                  "Currency": {
                    "description": "3 character currency code for the currency to fetch transactions for. If this is not specified the transaction will use the account's local currency (generally CAD).",
                    "type": "string"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transfer",
                    "type": "string"
                  },
                  "Notes": {
                    "description": "An optional note to associate with the transaction.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "DebitorAccountID",
                  "RecipientAccountID",
                  "Amount"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionID": {
                      "type": "integer",
                      "description": "The unique ID of the debit transaction associated with this transfer.",
                      "example": "11223344"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/account/fund-transfer": {
      "post": {
        "description": "This endpoint will fund the Debitor account using their default bank account, and then trigger an account transfer to the recipient account once the funds have been cleared.\n\nTo set a default bank account, please use the /bank-account/set-my-bank-account endpoint.",
        "summary": "partner/account/fund-transfer",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "PartnerAccountFundTransferPost",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "DebitorAccountID": {
                    "description": "ID of the account transferring the funds",
                    "type": "string"
                  },
                  "RecipientAccountID": {
                    "description": "ID of the account receiving the funds",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The amount to debit from the customer's bank account.",
                    "type": "number"
                  },
                  "Currency": {
                    "description": "3 character currency code for the currency. If this is not specified the transaction will use the account's local currency.",
                    "type": "string"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transfer",
                    "type": "string"
                  },
                  "Notes": {
                    "description": "An optional note to associate with the transaction.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "DebitorAccountID",
                  "RecipientAccountID",
                  "Amount",
                  "Currency"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionID": {
                      "type": "integer",
                      "description": "The unique ID of the debit transaction associated with this transfer.",
                      "example": "11223344"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/account/transfer-withdraw": {
      "post": {
        "description": "This endpoint will transfer money from the debitor account to the recipient account, and then immediately withdraw the money from the recipient account into their default bank account.\n\nTo set a default bank account, please use the /bank-account/set-my-bank-account endpoint.",
        "summary": "partner/account/transfer-withdraw",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "PartnerAccountTransferWithdrawPost",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "DebitorAccountID": {
                    "description": "ID of the account transferring the funds",
                    "type": "string"
                  },
                  "RecipientAccountID": {
                    "description": "ID of the account receiving the funds",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The amount to debit from the customer's bank account.",
                    "type": "number"
                  },
                  "Currency": {
                    "description": "3 character currency code for the currency. If this is not specified the transaction will use the account's local currency.",
                    "type": "string"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transfer",
                    "type": "string"
                  },
                  "Notes": {
                    "description": "An optional note to associate with the transaction.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "DebitorAccountID",
                  "RecipientAccountID",
                  "Amount",
                  "Currency"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionID": {
                      "type": "integer",
                      "description": "The unique ID of the debit transaction associated with this transfer.",
                      "example": "11223344"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/account/fund-transfer-withdraw": {
      "post": {
        "description": "This endpoint will fund the debitor account using their default bank account, and then transfer the money to the recipient account once the funds have been cleared. Once the funds are transferred, a withdraw transaction will be triggered to send the funds to the recipient account's default bank account.\n\nTo set a default bank account, please use the /bank-account/set-my-bank-account endpoint.",
        "summary": "partner/account/fund-transfer-withdraw",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "PartnerAccountFundTransferWithdrawPost",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "DebitorAccountID": {
                    "description": "ID of the account transferring the funds",
                    "type": "string"
                  },
                  "RecipientAccountID": {
                    "description": "ID of the account receiving the funds",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The amount to debit from the customer's bank account.",
                    "type": "number"
                  },
                  "Currency": {
                    "description": "3 character currency code for the currency. If this is not specified the transaction will use the account's local currency.",
                    "type": "string"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transfer",
                    "type": "string"
                  },
                  "Notes": {
                    "description": "An optional note to associate with the transaction.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "DebitorAccountID",
                  "RecipientAccountID",
                  "Amount",
                  "Currency"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionID": {
                      "type": "integer",
                      "description": "The unique ID of the debit transaction associated with this transfer.",
                      "example": "11223344"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/partner/account/onboarding-url": {
      "get": {
        "description": "This endpoint is used to fetch the onboarding URL for an account in the Application Pending stage",
        "summary": "partner/account/onboarding-url",
        "tags": [
          "Partner Endpoints"
        ],
        "operationId": "PartnerAccountOnboardingURLGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VopayAccountID",
            "in": "query",
            "required": true,
            "description": "The account ID for whom you are requesting the onboarding URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "OnboardingURL": {
                      "type": "string",
                      "description": "The onboarding URL for the VoPay account",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/balance": {
      "get": {
        "description": "This endpoint returns details on your current account balance and available funds.",
        "summary": "account/balance",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountBalanceGet",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Currency",
            "in": "query",
            "required": false,
            "description": "3 character currency code for the currency to fetch transactions for. If this is not specified it will be defaulted to the account's local currency (generally CAD).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AsOfDate",
            "in": "query",
            "required": false,
            "description": "A date in ISO 8601 format (yyyy-mm-dd) representing the date for which you want to retrieve the balance. If not provided, the current balance will be returned.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "AccountBalance": {
                      "type": "number",
                      "description": "Indicates the total current account balance, including pending funds.",
                      "example": "20000.00"
                    },
                    "PendingFunds": {
                      "type": "number",
                      "description": "Indicates the portion of the account balance which is pending due to in-progress transactions.",
                      "example": "5540.24"
                    },
                    "Reserve": {
                      "type": "number",
                      "description": "Indicates the portion of the account balance which is being held as a reserve against negative balances.",
                      "example": "50000.00"
                    },
                    "RollingReserveNSF": {
                      "type": "number",
                      "description": "Indicates the portion of the account balance which is being held as a reserve against NSF transactions.",
                      "example": "10000.00"
                    },
                    "RollingReserveReturns": {
                      "type": "number",
                      "description": "Indicates the portion of the account balance which is being held as a reserve against returned transactions.",
                      "example": "1000.00"
                    },
                    "AvailableImmediately": {
                      "type": "number",
                      "description": "Indicate the portion of the account balance that is available immediately",
                      "example": "0.00"
                    },
                    "AvailableFunds": {
                      "type": "number",
                      "description": "Indicates the portion of the account balance which is currently available for use. This is calculated by taking the AccountBalance and subtracting the PendingFunds, Reserve, RollingReserveNSF and RollingReserveReturns amounts.",
                      "example": "18000.00"
                    },
                    "Currency": {
                      "type": "string",
                      "description": "3 character currency code for the balance being returned.",
                      "example": "CAD"
                    },
                    "AsOfDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date for which the balance is being returned.",
                      "example": "2020-01-01"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/fund-my-account": {
      "post": {
        "description": "This endpoint will fund your VoPay account by debiting your default bank account.\n\nTo set a default bank account, please use the /bank-account/set-my-bank-account endpoint.",
        "summary": "account/fund-my-account",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountFundMyAccountPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The amount to debit from your bank account.",
                    "type": "number"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transactions",
                    "type": "string"
                  },
                  "Notes": {
                    "description": "An optional note to associate with the transactions.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  },
                  "GLCode": {
                    "description": "An optional unique identification general ledger code.",
                    "type": "string"
                  },
                  "TransactionTypeCode": {
                    "description": "CPA transaction code. Use the /api/v2/account/transactions/codes endpoint to retrieve a list of valid transaction codes. If not specified, the transaction will be created using code 450 (miscellaneous).",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "Amount"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionID": {
                      "type": "integer",
                      "description": "The unique ID of the funding transaction that was just created. This ID should be saved as it is required order to look up the status information on the transaction.",
                      "example": "1122"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/fund-my-account/schedule": {
      "post": {
        "description": "This endpoint will create a scheduled transaction to fund your VoPay account by debiting your default bank account.\n\nTo set a default bank account, please use the /bank-account/set-my-bank-account endpoint.",
        "summary": "account/fund-my-account/schedule",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountFundMyAccountSchedulePOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The amount to schedule in the transactions",
                    "type": "number"
                  },
                  "Frequency": {
                    "description": "The frequency of the scheduled transaction: single or recurring.",
                    "type": "string"
                  },
                  "NameOfFrequency": {
                    "description": "Name of frequency of the scheduled transaction (Only for recurring option), the posibles values are: weekly, biweekly, semi-monthly, monthly, bimonthly, 3 months, 6 months, yearly.",
                    "type": "string"
                  },
                  "ScheduleStartDate": {
                    "description": "Date from which the schedule will be started",
                    "type": "string"
                  },
                  "ScheduleEndDate": {
                    "description": "Date when the transaction processing will end (Only for recurring option), Either provide ScheduleEndDate or EndingAfterPayments",
                    "type": "string"
                  },
                  "EndingAfterPayments": {
                    "description": "Number of payments after which the transaction processing will end (Only for recurring option), Either provide ScheduleEndDate or EndingAfterPayments",
                    "type": "integer"
                  },
                  "SemiMonthlyFrequencyType": {
                    "description": "Type of semi-monthly frequency. This field is only required when NameOfFrequency is set to semi-monthly. The possible values are: SemiMonthFirstAndFifteenth, SemiMonthFifteenthAndLast",
                    "type": "integer"
                  },
                  "Description": {
                    "description": "Description of the schedule transaction",
                    "type": "string"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transaction.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "Amount",
                  "Frequency",
                  "NameOfFrequency",
                  "ScheduleStartDate",
                  "ScheduleEndDate",
                  "EndingAfterPayments",
                  "Description"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "Amount": {
                      "type": "number",
                      "description": "The dollar amount of the schedule transaction",
                      "example": "200.00"
                    },
                    "ScheduledTransactionID": {
                      "type": "integer",
                      "description": "ID of the schedule Transaction.",
                      "example": "1122"
                    },
                    "Frequency": {
                      "type": "string",
                      "description": "The frequency of the transaction",
                      "example": "single"
                    },
                    "Description": {
                      "type": "string",
                      "description": "Description of the schedule transaction",
                      "example": ""
                    },
                    "ScheduleStartDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Date from which the transaction will be started ",
                      "example": "2020-01-01"
                    },
                    "Status": {
                      "type": "string",
                      "description": "A message indicating the current transaction status. Statuses are: cancelled, completed or in progress",
                      "example": "in progress"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/withdraw-my-account": {
      "post": {
        "description": "This endpoint will credit your default bank account by withdarwing funds from your VoPay account.\n\nTo set a default bank account, please use the /bank-account/set-my-bank-account endpoint.",
        "summary": "account/withdraw-my-account",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountWithdrawMyAccountPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The amount to credit to your bank account.",
                    "type": "number"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transactions",
                    "type": "string"
                  },
                  "Notes": {
                    "description": "An optional note to associate with the transactions.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  },
                  "GLCode": {
                    "description": "An optional unique identification general ledger code.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "Amount"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionID": {
                      "type": "integer",
                      "description": "The unique ID of the funding transaction that was just created. This ID should be saved as it is required order to look up the status information on the transaction.",
                      "example": "1122"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/withdraw-my-account/schedule": {
      "post": {
        "description": "This endpoint will create a scheduled transaction to credit your default bank account by withdarwing funds from your VoPay account.\n\nTo set a default bank account, please use the /bank-account/set-my-bank-account endpoint.",
        "summary": "account/withdraw-my-account/schedule",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountWithdrawMyAccountSchedulePOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The amount to schedule in the transactions",
                    "type": "number"
                  },
                  "Frequency": {
                    "description": "The frequency of the scheduled transaction: single or recurring.",
                    "type": "string"
                  },
                  "NameOfFrequency": {
                    "description": "Name of frequency of the scheduled transaction (Only for recurring option), the posibles values are: weekly, biweekly, semi-monthly, monthly, bimonthly, 3 months, 6 months, yearly.",
                    "type": "string"
                  },
                  "ScheduleStartDate": {
                    "description": "Date from which the schedule will be started",
                    "type": "string"
                  },
                  "ScheduleEndDate": {
                    "description": "Date when the transaction processing will end (Only for recurring option), Either provide ScheduleEndDate or EndingAfterPayments",
                    "type": "string"
                  },
                  "EndingAfterPayments": {
                    "description": "Number of payments after which the transaction processing will end (Only for recurring option), Either provide ScheduleEndDate or EndingAfterPayments",
                    "type": "integer"
                  },
                  "SemiMonthlyFrequencyType": {
                    "description": "Type of semi-monthly frequency. This field is only required when NameOfFrequency is set to semi-monthly. The possible values are: SemiMonthFirstAndFifteenth, SemiMonthFifteenthAndLast",
                    "type": "integer"
                  },
                  "Description": {
                    "description": "Description of the schedule transaction",
                    "type": "string"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transaction.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "Amount",
                  "Frequency",
                  "NameOfFrequency",
                  "ScheduleStartDate",
                  "ScheduleEndDate",
                  "EndingAfterPayments",
                  "Description"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "Amount": {
                      "type": "number",
                      "description": "The dollar amount of the schedule transaction",
                      "example": "200.00"
                    },
                    "ScheduledTransactionID": {
                      "type": "integer",
                      "description": "ID of the schedule Transaction.",
                      "example": "1122"
                    },
                    "Frequency": {
                      "type": "string",
                      "description": "The frequency of the transaction",
                      "example": "single"
                    },
                    "Description": {
                      "type": "string",
                      "description": "Description of the schedule transaction",
                      "example": ""
                    },
                    "ScheduleStartDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Date from which the transaction will be started ",
                      "example": "2020-01-01"
                    },
                    "Status": {
                      "type": "string",
                      "description": "A message indicating the current transaction status. Statuses are: cancelled, completed or in progress",
                      "example": "in progress"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/transactions": {
      "get": {
        "description": "This endpoint returns a list all of the transactions which affect the account balance. This endpoint only returns basic information on the transactions. More detailed information on individual transactions is available from other API endpoints.",
        "summary": "account/transactions",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountTransactionsGet",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateTime",
            "in": "query",
            "required": true,
            "description": "Return transactions that occurred on or after this date/time. Can be specified in either YYYY-MM-DD HH:MM:SS or YYYY-MM-DD format.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateTime",
            "in": "query",
            "required": true,
            "description": "Return transactions that occurred on or before this date/time. Can be specified in either YYYY-MM-DD HH:MM:SS or YYYY-MM-DD format.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SettlementDate",
            "in": "query",
            "required": false,
            "description": "Return transactions that settled on this date. YYYY-MM-DD format.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ClientAccountID",
            "in": "query",
            "required": false,
            "description": "Filter transactions by Client account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactID",
            "in": "query",
            "required": false,
            "description": "Filter transactions by Contact ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Currency",
            "in": "query",
            "required": false,
            "description": "3 character currency code for the currency to fetch transactions for. If this is not specified it will be defaulted to the account's local currency (generally CAD).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TransactionType",
            "in": "query",
            "required": false,
            "description": "Specifies the type of transaction to return. Accepted values are: 'EFT Funding', 'EFT Withdrawal', 'Interac Money Request', 'Interac Bulk Payout', 'Credit Card', 'Fee', 'Reversal'.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TransactionID",
            "in": "query",
            "required": false,
            "description": "Searches for a transaction with the specified transaction ID, including any related child transactions which may exist.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ClientReferenceNumber",
            "in": "query",
            "required": false,
            "description": "Searches for transactions with the specified client reference number.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ScheduledTransactionID",
            "in": "query",
            "required": false,
            "description": "Id of the schedule transaction to search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WalletID",
            "in": "query",
            "required": false,
            "description": "Id of the wallet that the transactions should belong to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsFlagged",
            "in": "query",
            "required": false,
            "description": "Filter the list of transactions to only include transactions that have a flag status and have not been confirmed by the client.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsRefunded",
            "in": "query",
            "required": false,
            "description": "Filter the list of transactions to only include transactions that have been refunded.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TransactionStatus",
            "in": "query",
            "required": false,
            "description": "Filter the list of transactions by transaction status (ex. 'pending').",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "NumberOfRecords": {
                      "type": "integer",
                      "description": "Total number of transaction records returned",
                      "example": "0"
                    },
                    "Transactions": {
                      "type": "object",
                      "description": "Collection of TransactionInfo data",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "TransactionID": {
                              "type": "integer",
                              "description": "Unique ID for the Transaction",
                              "example": "5918"
                            },
                            "AccountName": {
                              "type": "string",
                              "description": "Account Name",
                              "example": ""
                            },
                            "TransactionDateTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp on which the transaction occurred.",
                              "example": "2019-12-04 18:13:39"
                            },
                            "SettlementDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp on which the transaction settled.",
                              "example": "2019-12-04 18:13:39"
                            },
                            "TransactionType": {
                              "type": "string",
                              "description": "Specifies the type of transaction, for example 'EFT Funding', 'EFT Withdrawal', 'Fee'.",
                              "example": "Reversal"
                            },
                            "TransactionStatus": {
                              "type": "string",
                              "description": "Current Status of the transaction",
                              "example": "in progress"
                            },
                            "Notes": {
                              "type": "string",
                              "description": "If applicable, notes giving context to the transaction.",
                              "example": "Transaction cancelled"
                            },
                            "DebitAmount": {
                              "type": "number",
                              "description": "The dollar amount by which this transaction debited funds from your account balance. If DebitAmountis set, CreditAmount will be null.",
                              "example": "100.00"
                            },
                            "CreditAmount": {
                              "type": "number",
                              "description": "The dollar amount by which this transaction credited funds to your account balance. If CreditAmount is set, DebitAmount will be null.",
                              "example": "0.00"
                            },
                            "Currency": {
                              "type": "string",
                              "description": "3 character currency code.",
                              "example": "CAD"
                            },
                            "HoldAmount": {
                              "type": "number",
                              "description": "The dollar amount of the funds from this transaction which are temporarily on hold. This is only applicable for transactions where CreditAmount is set.",
                              "example": "0.00"
                            },
                            "LastModified": {
                              "type": "string",
                              "format": "date-time",
                              "description": "This timestamp indicates when the transaction record was last modified. In normal circumstances the transaction record will only be modified when the HoldAmount is changed.",
                              "example": "2019-12-04 18:13:39"
                            },
                            "ParentTransactionID": {
                              "type": "string",
                              "description": "If a transaction directly relates to another transaction, this value will be set to link the new transaction to its parent. For example if an EFT comes back with insufficient funds a new transaction will be created referencing the original transaction as its parent.",
                              "example": "5909"
                            },
                            "ChildTransactionIDs": {
                              "type": "integer",
                              "description": "If this transaction directly relates to any other transactions this will contain a collection of child transaction IDs. For example if an EFT is reversed due to insufficient funds the original transaction record will reference the new transaction as a child.",
                              "example": "{}"
                            },
                            "ClientReferenceNumber": {
                              "type": "string",
                              "description": "The optional reference number which was set when the transaction was created.",
                              "example": "null"
                            },
                            "ScheduledTransactionID": {
                              "type": "integer",
                              "description": "ID of the scheduled transaction",
                              "example": "1"
                            },
                            "WalletID": {
                              "type": "string",
                              "description": "ID of the wallet this transaction belongs to",
                              "example": "primary_000001"
                            },
                            "ClientAccountID": {
                              "type": "string",
                              "description": "Client account ID used on the transaction, if applicable",
                              "example": "client_account_1"
                            },
                            "TransactionErrorCode": {
                              "type": "string",
                              "description": "Error code of the transaction, if applicable",
                              "example": "901"
                            },
                            "TransactionFailureReason": {
                              "type": "string",
                              "description": "Failure reason of the transaction, if applicable",
                              "example": "NSF"
                            },
                            "TransactionFlag": {
                              "type": "string",
                              "description": "Flag status of the transaction, if applicable",
                              "example": "duplicate - 45563,45561"
                            },
                            "ELinxRequestID": {
                              "type": "integer",
                              "description": "The unique ID of the eLinx request attached to the transaction, if applicable",
                              "example": "1234"
                            },
                            "IsRefunded": {
                              "type": "boolean",
                              "description": "True if the transaction was refunded, false if it is not",
                              "example": "true"
                            },
                            "FullName": {
                              "type": "string",
                              "description": "Customer's full name ",
                              "example": "Jane Doe"
                            },
                            "GLCode": {
                              "type": "string",
                              "description": "General ledger code.",
                              "example": "4300"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/transactions/codes": {
      "get": {
        "description": "This endpoint returns a list all of transaction codes that can be assigned to transactions.",
        "summary": "account/transactions/codes",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountTransactionsCodesGet",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionCodes": {
                      "type": "object",
                      "description": "Collection of Transaction Code data",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "TransactionTypeCode": {
                              "type": "integer",
                              "description": "Unique transaction type code",
                              "example": "200"
                            },
                            "Category": {
                              "type": "string",
                              "description": "High-level category of the transaction code",
                              "example": "Pre-Authorized Transactions"
                            },
                            "Description": {
                              "type": "string",
                              "description": "Description of the transaction code",
                              "example": "Payroll Deposit"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/transactions/gl-codes": {
      "get": {
        "description": "This endpoint returns a list all of your GL codes that can be assigned to transactions. Note, you must connect your accounting software to your account in order to use this endpoint.",
        "summary": "account/transactions/gl-codes",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountTransactionsGLCodesGet",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "GLCodes": {
                      "type": "object",
                      "description": "Collection of GL Code data",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "GLCode": {
                              "type": "string",
                              "description": "Unique GL code",
                              "example": "22000"
                            },
                            "Name": {
                              "type": "string",
                              "description": "Name of the GL code",
                              "example": "Accounts Payable"
                            },
                            "Section": {
                              "type": "string",
                              "description": "Section of the GL code",
                              "example": "Liabilities"
                            },
                            "SubSection": {
                              "type": "string",
                              "description": "Sub-section of the GL code, if applicable",
                              "example": "Current Liabilities"
                            },
                            "AccountGroup": {
                              "type": "string",
                              "description": "Account group of the GL code",
                              "example": "Accounts Payables"
                            },
                            "SubGroup": {
                              "type": "string",
                              "description": "Sub-account group of the GL code, if applicable",
                              "example": "Accounts Payables"
                            },
                            "Classification": {
                              "type": "string",
                              "description": "Classification of the GL code",
                              "example": "Liability"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/remaining-limit": {
      "get": {
        "description": "This endpoint returns the remaining daily, weekly and monthly transaction limits for your VoPay account. If not limits are currently set for your VoPay account, N/A will be returned for each.",
        "summary": "account/remaining-limit",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountRemainingLimitGet",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Date",
            "in": "query",
            "required": false,
            "description": "A future date (in Y-m-d format) to check the remaining limits for. If not specified, the current date will be used.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "Date": {
                      "type": "string",
                      "description": "The date used to calculate the remaining limits",
                      "example": "2023-12-25"
                    },
                    "Inbound": {
                      "type": "object",
                      "description": "Inbound velocity limits associated with the account",
                      "properties": {
                        "Limits": {
                          "type": "object",
                          "description": "The starting inbound velocity limits associated with the account",
                          "properties": {
                            "Daily": {
                              "type": "string",
                              "description": "The starting inbound daily velocity limit amount.",
                              "example": "10000.00"
                            },
                            "Weekly": {
                              "type": "string",
                              "description": "The starting inbound weekly velocity limit amount.",
                              "example": "10000.00"
                            },
                            "Monthly": {
                              "type": "string",
                              "description": "The starting inbound monthly velocity limit amount.",
                              "example": "10000.00"
                            }
                          }
                        },
                        "RemainingLimits": {
                          "type": "object",
                          "description": "The remaining inbound velocity amounts associated with the account",
                          "properties": {
                            "Daily": {
                              "type": "string",
                              "description": "The remaining inbound daily velocity limit amount.",
                              "example": "10000.00"
                            },
                            "Weekly": {
                              "type": "string",
                              "description": "The remaining inbound weekly velocity limit amount.",
                              "example": "10000.00"
                            },
                            "Monthly": {
                              "type": "string",
                              "description": "The remaining inbound monthly velocity limit amount.",
                              "example": "10000.00"
                            }
                          }
                        }
                      }
                    },
                    "Outbound": {
                      "type": "object",
                      "description": "Outbound velocity limits associated with the account",
                      "properties": {
                        "Limits": {
                          "type": "object",
                          "description": "The starting outbound velocity limits associated with the account",
                          "properties": {
                            "Daily": {
                              "type": "string",
                              "description": "The starting outbound daily velocity limit amount.",
                              "example": "10000.00"
                            },
                            "Weekly": {
                              "type": "string",
                              "description": "The starting outbound weekly velocity limit amount.",
                              "example": "10000.00"
                            },
                            "Monthly": {
                              "type": "string",
                              "description": "The starting outbound monthly velocity limit amount.",
                              "example": "10000.00"
                            }
                          }
                        },
                        "RemainingLimits": {
                          "type": "object",
                          "description": "The remaining outbound velocity amounts associated with the account",
                          "properties": {
                            "Daily": {
                              "type": "string",
                              "description": "The remaining outbound daily velocity limit amount.",
                              "example": "10000.00"
                            },
                            "Weekly": {
                              "type": "string",
                              "description": "The remaining outbound weekly velocity limit amount.",
                              "example": "10000.00"
                            },
                            "Monthly": {
                              "type": "string",
                              "description": "The remaining outbound monthly velocity limit amount.",
                              "example": "10000.00"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/transfer-to": {
      "post": {
        "description": "This endpoint allows you to transfer funds between VoPay accounts and/or Client accounts.",
        "summary": "account/transfer-to",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountTransferToPost",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "DebitorClientAccountID": {
                    "description": "ID of the client account transferring the funds",
                    "type": "string"
                  },
                  "RecipientClientAccountID": {
                    "description": "ID of the client account receiving the funds",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The transfer amount.",
                    "type": "number"
                  },
                  "Currency": {
                    "description": "3 character currency code for the currency to fetch transactions for. If this is not specified the transaction will use the account's local currency (generally CAD).",
                    "type": "string"
                  },
                  "RecipientAccountID": {
                    "description": "Account ID of the account for which you want to transfer funds to.",
                    "type": "string"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transfer",
                    "type": "string"
                  },
                  "Notes": {
                    "description": "An optional note to associate with the transaction.",
                    "type": "string"
                  },
                  "ParentTransactionID": {
                    "description": "The parent transaction where the transfer-to will be linked to, can become a split payment with multiple transfers. When funds of the parent transaction have been released the system will generate the distributions of these funds automatically.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "Amount",
                  "RecipientAccountID"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionID": {
                      "type": "integer",
                      "description": "The unique ID of the debit transaction associated with this transfer.",
                      "example": "1122"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/transfer-from": {
      "post": {
        "description": "This endpoint allows you to transfer funds from a pre-authorized VoPay account to your VoPay or client account.",
        "summary": "account/transfer-from",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountTransferFromPost",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "DebitorClientAccountID": {
                    "description": "ID of the client account transferring the funds",
                    "type": "string"
                  },
                  "RecipientClientAccountID": {
                    "description": "ID of the client account receiving the funds",
                    "type": "string"
                  },
                  "Amount": {
                    "description": "The transfer amount.",
                    "type": "number"
                  },
                  "Currency": {
                    "description": "3 character currency code for the currency to fetch transactions for. If this is not specified the transaction will use the account's local currency (generally CAD).",
                    "type": "string"
                  },
                  "DebitorAccountID": {
                    "description": "Account ID of the account for which you want to transfer funds from. The account you wish to transfer funds from must be a sub account of your account or from another sub account with a shared parent account.",
                    "type": "string"
                  },
                  "ClientReferenceNumber": {
                    "description": "An optional reference number to associate with the transfer",
                    "type": "string"
                  },
                  "Notes": {
                    "description": "An optional note to associate with the transaction.",
                    "type": "string"
                  },
                  "IdempotencyKey": {
                    "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "Amount",
                  "DebitorAccountID"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionID": {
                      "type": "integer",
                      "description": "The unique ID of the debit transaction associated with this transfer.",
                      "example": "1122"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/auto-balance-transfer": {
      "post": {
        "description": "This endpoint allows you to set up an auto-balance transfer from your VoPay account to your default operational bank account. The frequency available to set the auto-transfer can be daily, weekly, bi-weekly or monthly. \n\nThis option requires special permission.",
        "summary": "account/auto-balance-transfer",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountAutoBalanceTransferPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "ScheduleStartDate": {
                    "description": "Date from which the schedule will be started",
                    "type": "string"
                  },
                  "TypeOfFrequency": {
                    "description": "Type of frequency that you which to receive the deposit, the posibles values are: daily, weekly, biweekly, monthly",
                    "type": "string"
                  },
                  "AutoBalanceTransferAmount": {
                    "description": "The minumum amount to have in your VoPay account to initiate this scheduled transfer, if not provided, the default amount will be 0.01.",
                    "type": "number"
                  },
                  "Currency": {
                    "description": "The currency of the funds you want to trasnfer to your bank account. If not currency is provdied, your VoPay account's default currency will be used.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "ScheduleStartDate",
                  "TypeOfFrequency"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "This endpoint is used to retrieve the information of your auto balance transfer. \n\n This option requires special permissions.",
        "summary": "account/auto-balance-transfer",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountAutoBalanceTransferGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "ScheduleStartDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Date from which the auto transfer will be started ",
                      "example": "2020-01-01"
                    },
                    "Description": {
                      "type": "string",
                      "description": "Description of the of the auto transfer balance",
                      "example": ""
                    },
                    "NameOfFrequency": {
                      "type": "string",
                      "description": "The frequency of the auto transfer (recurring)",
                      "example": "recurring"
                    },
                    "AutoBalanceTransferAmount": {
                      "type": "number",
                      "description": "The minumum amount to have in your VoPay account to start the auto transfer balance",
                      "example": "25.00"
                    },
                    "Status": {
                      "type": "string",
                      "description": "A message indicating the current status of the auto transfer. Statuses are: cancelled, completed, or in progress",
                      "example": "in progress"
                    },
                    "Currency": {
                      "type": "string",
                      "description": "The currency of the funds transferred to your bank account.",
                      "example": "CAD"
                    },
                    "AccountHolderName": {
                      "type": "string",
                      "description": "The name of the account holder",
                      "example": "John Doe"
                    },
                    "AccountNumber": {
                      "type": "string",
                      "description": "Recipient's bank account number that funds were deposited to.",
                      "example": "13434387"
                    },
                    "FinancialInstitutionNumber": {
                      "type": "string",
                      "description": "Three digit institution number of the customer's Canadian bank account.",
                      "example": "112"
                    },
                    "BranchTransitNumber": {
                      "type": "string",
                      "description": "Transit number for the customer's Canadian bank account.",
                      "example": "**809"
                    },
                    "ABARoutingNumber": {
                      "type": "string",
                      "description": "Nine digit ABA routing number of the customer's US bank account.",
                      "example": "123456789"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/transactions/recent": {
      "get": {
        "description": "This endpoint returns a list of recent transactions for a specific contact or client account.",
        "summary": "account/transactions/recent",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountTransactionsRecentGet",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateTime",
            "in": "query",
            "required": false,
            "description": "Return transactions that occurred on or after this date/time. Can be specified in either YYYY-MM-DD HH:MM:SS or YYYY-MM-DD format.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateTime",
            "in": "query",
            "required": false,
            "description": "Return transactions that occurred on or before this date/time. Can be specified in either YYYY-MM-DD HH:MM:SS or YYYY-MM-DD format.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ClientAccountID",
            "in": "query",
            "required": true,
            "description": "Filter transactions by Client account ID. This is required if client account is enabled. Use ContactID instead if client account is not enabled.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactID",
            "in": "query",
            "required": true,
            "description": "Filter transactions by Contact ID. This is required if client account is not enabled. Use ClientAccountID instead if client account is enabled.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "required": false,
            "description": "Limit the number of records that are returned. Use the off-set parameter to set the starting point in the data-set. Default limit is 1,000 and maximum limit is 10,000.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "required": false,
            "description": "Use this parameter to set the starting point in the dataset.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "NumberOfRecords": {
                      "type": "integer",
                      "description": "Total number of transaction records returned",
                      "example": "0"
                    },
                    "Transactions": {
                      "type": "object",
                      "description": "Collection of TransactionInfo data",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "TransactionID": {
                              "type": "integer",
                              "description": "Unique ID for the Transaction",
                              "example": "5918"
                            },
                            "TransactionDateTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp on which the transaction occurred.",
                              "example": "2019-12-04 18:13:39"
                            },
                            "TransactionType": {
                              "type": "string",
                              "description": "Specifies the type of transaction, for example 'EFT Funding', 'EFT Withdrawal', 'Fee'.",
                              "example": "Reversal"
                            },
                            "TransactionStatus": {
                              "type": "string",
                              "description": "Current Status of the transaction",
                              "example": "in progress"
                            },
                            "Amount": {
                              "type": "number",
                              "description": "The dollar transaction amount.",
                              "example": "100.00"
                            },
                            "Currency": {
                              "type": "string",
                              "description": "3 character currency code.",
                              "example": "CAD"
                            }
                          }
                        }
                      }
                    },
                    "Pagination": {
                      "type": "object",
                      "description": "Pagination metadata",
                      "properties": {
                        "TotalRecords": {
                          "type": "string",
                          "description": "Total number of sub account records in that search range.",
                          "example": "1000"
                        },
                        "Offset": {
                          "type": "string",
                          "description": "Use this parameter to set the starting point in the dataset.",
                          "example": "1000"
                        },
                        "Limit": {
                          "type": "string",
                          "description": "Limit the number of records that are returned.",
                          "example": "1000"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/auto-balance-transfer-list": {
      "get": {
        "description": "This endpoint is used to retrieve a list of all your auto balance transfers. \n\n This option requires special permissions.",
        "summary": "account/auto-balance-transfer-list",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountAutoBalanceTransferListGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "Wallets": {
                      "type": "object",
                      "description": "Collection of Wallets",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "AutoBalanceTransferID": {
                              "type": "integer",
                              "description": "ID of the auto balance transfer",
                              "example": "1234"
                            },
                            "ScheduleStartDate": {
                              "type": "string",
                              "format": "date",
                              "description": "Date from which the auto transfer will be started",
                              "example": "2020-01-01"
                            },
                            "Description": {
                              "type": "string",
                              "description": "Description of the auto transfer balance",
                              "example": ""
                            },
                            "NameOfFrequency": {
                              "type": "string",
                              "description": "The frequency of the auto transfer (recurring)",
                              "example": "recurring"
                            },
                            "AutoBalanceTransferAmount": {
                              "type": "number",
                              "description": "The minumum amount to have in your VoPay account to start the auto transfer balance",
                              "example": "25.00"
                            },
                            "Status": {
                              "type": "string",
                              "description": "A message indicating the current status of the auto transfer. Statuses are: cancelled, completed, or in progress",
                              "example": "in progress"
                            },
                            "Currency": {
                              "type": "string",
                              "description": "The currency of the funds transferred to your bank account.",
                              "example": "CAD"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/auto-balance-transfer/cancel": {
      "post": {
        "description": "This endpoint allows you to cancel an auto balance transfer. \n\n This option requires special permissions.",
        "summary": "account/auto-balance-transfer/cancel",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountAutoBalanceTransferCancelPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "Status": {
                      "type": "string",
                      "description": "Contains the new status of the auto transfer balance",
                      "example": "cancelled"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/auto-balance-transfer/report": {
      "get": {
        "description": "This endpoint returns the list of transactions associated with an auto balance transfer. \n\nThe sum of all debits/credits should match the amount on the auto-balance transfer.",
        "summary": "account/auto-balance-transfer/report",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountAutoBalanceTransferReportGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TransactionID",
            "in": "query",
            "required": true,
            "description": "Transaction ID of the auto-balance transfer transaction",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "Transactions": {
                      "type": "object",
                      "description": "Collection of Transactions related to the auto-balance transfer",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "TransactionID": {
                              "type": "integer",
                              "description": "The unique ID of the transaction.",
                              "example": "1234"
                            },
                            "TransactionType": {
                              "type": "string",
                              "description": "Transaction Type",
                              "example": "EFT Funding"
                            },
                            "TransactionDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Transaction date",
                              "example": "2024-08-01 12:34:56"
                            },
                            "CreditAmount": {
                              "type": "number",
                              "description": "The credit amount on the transaction.",
                              "example": "2000.00"
                            },
                            "DebitAmount": {
                              "type": "number",
                              "description": "The debit amount on the transaction.",
                              "example": "2000.00"
                            },
                            "FullName": {
                              "type": "string",
                              "description": "The name on the transaction.",
                              "example": "John Smith"
                            },
                            "ReferenceNo": {
                              "type": "string",
                              "description": "The reference number provided on the transaction.",
                              "example": "ABCD-1234"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/authorized-ips": {
      "post": {
        "description": "This endpoint allows an account's authorized IP addresses to be updated. As updating the authorized IP addresses will overwrite the existing list, GET the list prior to issuing a POST if you wish to append a value.",
        "summary": "account/authorized-ips",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountAuthorizedIPsPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "AuthorizedIPs": {
                    "description": "A comma delimited list of valid IP addresses. Use a wildcard (*) to indicate that all IP addresses are authorized.",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "AuthorizedIPs"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "AuthorizedIPs": {
                      "type": "string",
                      "description": "A comma delimited list of valid IP addresses",
                      "example": "127.0.0.1, 0.0.0.0"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "This endpoint retrieves an account's authorized IP addresses.",
        "summary": "account/authorized-ips",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountAuthorizedIPsGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "AuthorizedIPs": {
                      "type": "string",
                      "description": "A comma delimited list of valid IP addresses",
                      "example": "127.0.0.1, 0.0.0.0"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/set-default-payment-method": {
      "post": {
        "description": "This endpoint allows you to set your account's default payment method. This payment method will be used when collecting money for you monthly invoice. The default payment method is your VoPay account.",
        "summary": "account/set-default-payment-method",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountSetDefaultPaymentMethodPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "PaymentMethod": {
                    "description": "Your choice of default payment method. Acepted values are: vopay (to deduct fees from your VoPay account) and bank (to deduct fees from your default bank account).",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "PaymentMethod"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/transaction/history": {
      "post": {
        "description": "Retrieves the history for a specific transaction.",
        "summary": "account/transaction/history",
        "tags": [
          "Account Endpoints"
        ],
        "operationId": "AccountTransactionHistoryPost",
        "deprecated": false,
        "parameters": [
          {
            "name": "Timezone ",
            "in": "query",
            "required": false,
            "description": "Use this parameter to convert the time to the specified timezone. If no timezone is specified, the default is UTC.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "TransactionID": {
                    "description": "The unique ID for the transaction",
                    "type": "integer"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "TransactionID"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "TransactionHistory": {
                      "type": "object",
                      "description": "Collection of Transaction history data",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "Status": {
                              "type": "string",
                              "description": "The status of the transaction",
                              "example": "pending"
                            },
                            "DateAdded": {
                              "type": "string",
                              "description": "The date when the transaction updated to the status",
                              "example": "2019-11-03 01:00:00"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/subaccount": {
      "post": {
        "description": "This endpoint is used to create a new sub-account.",
        "summary": "account/subaccount",
        "tags": [
          "Sub-Account Endpoints"
        ],
        "operationId": "SubaccountPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "LegalBusinessName": {
                    "description": "Company's Legal business name",
                    "type": "string"
                  },
                  "EmailAddress": {
                    "description": "Company's email address - Must be a valid email",
                    "type": "string",
                    "format": "email"
                  },
                  "SendWelcomeEmail": {
                    "description": "It is a flag to allow user to decide if he wants to send the welcome email on their behalf or not. By default this value is set as true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "LegalBusinessName",
                  "EmailAddress"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "Message": {
                      "type": "string",
                      "description": "Contains a description of the successful message",
                      "example": ""
                    },
                    "AccountID": {
                      "type": "string",
                      "description": "Account Name of the new user created in the endpoint",
                      "example": "AccountTest1"
                    },
                    "APISharedSecret": {
                      "type": "string",
                      "description": "API Shared Secret",
                      "example": "AbcDefGi+KlmnopQRSTu183=="
                    },
                    "APIKey": {
                      "type": "string",
                      "description": "The API key for the sub account",
                      "example": "eddc0f5e37d20f98b486daf842447ec1f225f859"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "This endpoint will return a list of all of the sub-accounts managed by the main account.",
        "summary": "account/subaccount",
        "tags": [
          "Sub-Account Endpoints"
        ],
        "operationId": "SubaccountGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit ",
            "in": "query",
            "required": false,
            "description": "Limit the number of records that are returned.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Offset ",
            "in": "query",
            "required": false,
            "description": "Use this parameter to set the starting point in the dataset.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "ParentAccount": {
                      "type": "string",
                      "description": "Parent account name",
                      "example": "ParentAccount1"
                    },
                    "Subaccounts": {
                      "type": "object",
                      "description": "Collection of subaccounts per father account",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "LegalBusinessName": {
                              "type": "string",
                              "description": "Legal Business Name",
                              "example": "Company Legal Business Name"
                            },
                            "AccountName": {
                              "type": "string",
                              "description": "Account name of the sub account",
                              "example": "SubaccountName1"
                            },
                            "AccountID": {
                              "type": "string",
                              "description": "Account ID of the sub account",
                              "example": "Subaccount1"
                            },
                            "SubAccountType": {
                              "type": "string",
                              "description": "Type of sub-account",
                              "example": ""
                            },
                            "OrginatorName": {
                              "type": "string",
                              "description": "Short Name of the company to identify themselves in the documents",
                              "example": ""
                            },
                            "OriginatorShortName": {
                              "type": "string",
                              "description": "Short Name of the company to identify themselves in the documents (max 15 chars)",
                              "example": ""
                            },
                            "Email": {
                              "type": "string",
                              "format": "email",
                              "description": "Sub-account email address",
                              "example": "subaccount.mail@email.com"
                            },
                            "Phone": {
                              "type": "integer",
                              "description": "Sub-account's phone number",
                              "example": "604556****"
                            },
                            "Fax": {
                              "type": "string",
                              "description": "Sub-account's fax number",
                              "example": "604556****"
                            },
                            "City": {
                              "type": "string",
                              "description": "Sub-account's city",
                              "example": "Vancouver"
                            },
                            "Province": {
                              "type": "string",
                              "description": "Sub-account's province specified using two character abbreviation (eg. BC, AB)",
                              "example": "BC"
                            },
                            "Country": {
                              "type": "string",
                              "description": "Sub-account's country specified using full country name or ISO 3166-1 alpha-2 code.",
                              "example": "Canada"
                            },
                            "PostalCode": {
                              "type": "string",
                              "description": "Sub-account's postal code.",
                              "example": "V2W 4V6"
                            },
                            "Address": {
                              "type": "string",
                              "description": "Sub-account's address line",
                              "example": "112 Bentall Street"
                            },
                            "APISharedSecret": {
                              "type": "string",
                              "description": "API Shared Secret",
                              "example": "AbcDefGi+KlmnopQRSTu183=="
                            },
                            "FlinksUrl": {
                              "type": "string",
                              "description": "The Flinks URL",
                              "example": "https://www.mycompany.com/flinks-url"
                            },
                            "WebhookUrl": {
                              "type": "string",
                              "description": "URL where the users want us to send their notifications. See Webhooks attribute for full list.",
                              "example": "https://www.mycompany.com/webhook-listener"
                            },
                            "Webhooks": {
                              "type": "object",
                              "description": "Collection of webhook event types configured",
                              "properties": {
                                "0": {
                                  "type": "object",
                                  "properties": {
                                    "Event": {
                                      "type": "string",
                                      "description": "The type of webhook notification the users wish to receive. Options are: transaction, paylink, bankaccount, debitcard, creditcard, batchrequest, batchdetail, accountonboarding, accountonboardingapplication, scheduledtransactions, accountverifications, virtualtransaction.",
                                      "example": ""
                                    },
                                    "Url": {
                                      "type": "string",
                                      "description": "Webhook URL, is the url is not setup it will return empty",
                                      "example": ""
                                    }
                                  }
                                }
                              }
                            },
                            "IsActive": {
                              "type": "boolean",
                              "description": "Determine if the account is active or not",
                              "example": "true"
                            },
                            "AccountStatus": {
                              "type": "string",
                              "description": "The current status of the account",
                              "example": "Application Pending"
                            },
                            "GCMEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Global cash management",
                              "example": "true"
                            },
                            "EFTCollectEnabled": {
                              "type": "boolean",
                              "description": "Permission related to EFT Fund",
                              "example": "true"
                            },
                            "EFTSendEnabled": {
                              "type": "boolean",
                              "description": "Permission related to EFT Withdraw",
                              "example": "true"
                            },
                            "USDEFTCollectEnabled": {
                              "type": "boolean",
                              "description": "Permission related to EFT Fund using USD currency",
                              "example": "true"
                            },
                            "USDEFTSendEnabled": {
                              "type": "boolean",
                              "description": "Permission related to EFT Withdraw using USD currency",
                              "example": "true"
                            },
                            "RTRWithdrawEnabled": {
                              "type": "boolean",
                              "description": "Permission related to VoPay Instant Withdraw",
                              "example": "true"
                            },
                            "VisaDirectEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Visa Direct",
                              "example": "true"
                            },
                            "InteracMoneyRequestEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Interac Money request",
                              "example": "true"
                            },
                            "InteracBulkPayoutEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Interac bulk payout",
                              "example": "true"
                            },
                            "PayLinkEnabled": {
                              "type": "boolean",
                              "description": "Permission related to Paylink",
                              "example": "true"
                            },
                            "Balances": {
                              "type": "object",
                              "description": "Collection of the balances of the subaccount",
                              "properties": {
                                "0": {
                                  "type": "object",
                                  "properties": {
                                    "Currency": {
                                      "type": "string",
                                      "description": "3 character currency code for the balance being returned.",
                                      "example": "CAD"
                                    },
                                    "AccountBalance": {
                                      "type": "number",
                                      "description": "Indicates the total current account balance, including pending funds.",
                                      "example": "20000.00"
                                    },
                                    "PendingBalance": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is pending due to in-progress transactions.",
                                      "example": "5540.24"
                                    },
                                    "Reserve": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is being held as a reserve against negative balances.",
                                      "example": "50000.00"
                                    },
                                    "RollingReserveNSF": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is being held as a reserve against NSF transactions.",
                                      "example": "10000.00"
                                    },
                                    "RollingReserveReturns": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is being held as a reserve against returned transactions.",
                                      "example": "1000.00"
                                    },
                                    "AvailableImmediately": {
                                      "type": "number",
                                      "description": "Indicate the portion of the account balance that is available immediately",
                                      "example": "0.00"
                                    },
                                    "AvailableBalance": {
                                      "type": "number",
                                      "description": "Indicates the portion of the account balance which is currently available for use. This is calculated by taking the AccountBalance and subtracting the PendingFunds, Reserve, RollingReserveNSF and RollingReserveReturns amounts.",
                                      "example": "18000.00"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Pagination": {
                      "type": "object",
                      "description": "Pagination metadata",
                      "properties": {
                        "TotalRecords": {
                          "type": "string",
                          "description": "Total number of sub account records in that search range.",
                          "example": "1000"
                        },
                        "Offset": {
                          "type": "string",
                          "description": "Use this parameter to set the starting point in the dataset.",
                          "example": "1000"
                        },
                        "Limit": {
                          "type": "string",
                          "description": "Limit the number of records that are returned.",
                          "example": "1000"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/subaccount/transactions": {
      "get": {
        "description": "This endpoint will return a list of all of the transactions for sub-accounts, and its sub-accounts transaction.",
        "summary": "account/subaccount/transactions",
        "tags": [
          "Sub-Account Endpoints"
        ],
        "operationId": "SubaccountTransactionGET",
        "deprecated": false,
        "parameters": [
          {
            "name": "AccountID",
            "in": "query",
            "required": true,
            "description": "Your account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "description": "API key for the account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Signature",
            "in": "query",
            "required": true,
            "description": "Hashed signature for the request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateTime",
            "in": "query",
            "required": true,
            "description": "Return transactions that occurred on or after this date/time. Can be specified in either YYYY-MM-DD HH:MM:SS or YYYY-MM-DD format.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateTime",
            "in": "query",
            "required": true,
            "description": "Return transactions that occurred on or before this date/time. Can be specified in either YYYY-MM-DD HH:MM:SS or YYYY-MM-DD format.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ClientAccountID",
            "in": "query",
            "required": false,
            "description": "Filter transactions by Client account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContactID",
            "in": "query",
            "required": false,
            "description": "Filter transactions by Contact ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Currency",
            "in": "query",
            "required": false,
            "description": "3 character currency code for the currency to fetch transactions for. If this is not specified it will be defaulted to the account's local currency (generally CAD).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TransactionType",
            "in": "query",
            "required": false,
            "description": "Specifies the type of transaction to return. Accepted values are: 'EFT Funding', 'EFT Withdrawal', 'Interac Money Request', 'Interac Bulk Payout', 'Credit Card', 'Fee', 'Reversal'.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TransactionID",
            "in": "query",
            "required": false,
            "description": "Searches for a transaction with the specified transaction ID, including any related child transactions which may exist.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ClientReferenceNumber",
            "in": "query",
            "required": false,
            "description": "Searches for transactions with the specified client reference number.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ScheduledTransactionID",
            "in": "query",
            "required": false,
            "description": "Id of the schedule transaction to search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WalletID",
            "in": "query",
            "required": false,
            "description": "Id of the wallet that the transactions should belong to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsFlagged",
            "in": "query",
            "required": false,
            "description": "Filter the list of transactions to only include transactions that have a flag status and have not been confirmed by the client.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsRefunded",
            "in": "query",
            "required": false,
            "description": "Filter the list of transactions to only include transactions that have been refunded.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "required": false,
            "description": "Limit the number of records that are returned. Use the off-set parameter to set the starting point in the data-set. Default limit is 1,000 and maximum limit is 10,000.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "required": false,
            "description": "Use this parameter to set the starting point in the dataset.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    },
                    "NumberOfRecords": {
                      "type": "integer",
                      "description": "Total number of transaction records returned.",
                      "example": "1"
                    },
                    "Transactions": {
                      "type": "object",
                      "description": "Collection of TransactionInfo data",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "TransactionID": {
                              "type": "integer",
                              "description": "Unique ID for the Transaction",
                              "example": "5918"
                            },
                            "AccountName": {
                              "type": "string",
                              "description": "Account Name",
                              "example": ""
                            },
                            "TransactionDateTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp on which the transaction occurred.",
                              "example": "2019-12-04 18:13:39"
                            },
                            "TransactionType": {
                              "type": "string",
                              "description": "Specifies the type of transaction, for example 'EFT Funding', 'EFT Withdrawal', 'Fee'.",
                              "example": "Reversal"
                            },
                            "TransactionStatus": {
                              "type": "string",
                              "description": "Current Status of the transaction",
                              "example": "in progress"
                            },
                            "Notes": {
                              "type": "string",
                              "description": "If applicable, notes giving context to the transaction.",
                              "example": "Transaction cancelled"
                            },
                            "DebitAmount": {
                              "type": "number",
                              "description": "The dollar amount by which this transaction debited funds from your account balance. If DebitAmountis set, CreditAmount will be null.",
                              "example": "100.00"
                            },
                            "CreditAmount": {
                              "type": "number",
                              "description": "The dollar amount by which this transaction credited funds to your account balance. If CreditAmount is set, DebitAmount will be null.",
                              "example": "0.00"
                            },
                            "Currency": {
                              "type": "string",
                              "description": "3 character currency code.",
                              "example": "CAD"
                            },
                            "HoldAmount": {
                              "type": "number",
                              "description": "The dollar amount of the funds from this transaction which are temporarily on hold. This is only applicable for transactions where CreditAmount is set.",
                              "example": "0.00"
                            },
                            "LastModified": {
                              "type": "string",
                              "format": "date-time",
                              "description": "This timestamp indicates when the transaction record was last modified. In normal circumstances the transaction record will only be modified when the HoldAmount is changed.",
                              "example": "2019-12-04 18:13:39"
                            },
                            "ParentTransactionID": {
                              "type": "string",
                              "description": "If a transaction directly relates to another transaction, this value will be set to link the new transaction to its parent. For example if an EFT comes back with insufficient funds a new transaction will be created referencing the original transaction as its parent.",
                              "example": "5909"
                            },
                            "ChildTransactionIDs": {
                              "type": "integer",
                              "description": "If this transaction directly relates to any other transactions this will contain a collection of child transaction IDs. For example if an EFT is reversed due to insufficient funds the original transaction record will reference the new transaction as a child.",
                              "example": "{}"
                            },
                            "ClientReferenceNumber": {
                              "type": "string",
                              "description": "The optional reference number which was set when the transaction was created.",
                              "example": "null"
                            },
                            "ScheduledTransactionID": {
                              "type": "integer",
                              "description": "ID of the scheduled transaction",
                              "example": "1"
                            },
                            "WalletID": {
                              "type": "string",
                              "description": "ID of the wallet this transaction belongs to",
                              "example": "primary_000001"
                            },
                            "ClientAccountID": {
                              "type": "string",
                              "description": "Client account ID used on the transaction, if applicable",
                              "example": "client_account_1"
                            },
                            "TransactionErrorCode": {
                              "type": "string",
                              "description": "Error code of the transaction, if applicable",
                              "example": "901"
                            },
                            "TransactionFailureReason": {
                              "type": "string",
                              "description": "Failure reason of the transaction, if applicable",
                              "example": "NSF"
                            },
                            "TransactionFlag": {
                              "type": "string",
                              "description": "Flag status of the transaction, if applicable",
                              "example": "duplicate - 45563,45561"
                            },
                            "ELinxRequestID": {
                              "type": "integer",
                              "description": "The unique ID of the eLinx request attached to the transaction, if applicable",
                              "example": "1234"
                            },
                            "IsRefunded": {
                              "type": "boolean",
                              "description": "True if the transaction was refunded, false if it is not",
                              "example": "true"
                            },
                            "FullName": {
                              "type": "string",
                              "description": "Customer's full name ",
                              "example": "Jane Doe"
                            }
                          }
                        }
                      }
                    },
                    "Pagination": {
                      "type": "object",
                      "description": "Pagination metadata",
                      "properties": {
                        "TotalRecords": {
                          "type": "string",
                          "description": "Total number of transaction records in that search range.",
                          "example": "1000"
                        },
                        "Offset": {
                          "type": "string",
                          "description": "Use this parameter to set the starting point in the dataset.",
                          "example": "1000"
                        },
                        "Limit": {
                          "type": "string",
                          "description": "Limit the number of records that are returned.",
                          "example": "1000"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/subaccount/set-permissions": {
      "post": {
        "description": "This endpoint will allow the user to modify the permissions and the maximum amounts to their sub-accounts in the API.  \n\n The main account will be able to only modify the permission that he has, For Example, if the user does not have ETCCollect permission, the account won't be able to assign that permission to their sub-account.",
        "summary": "account/subaccount/set-permissions",
        "tags": [
          "Sub-Account Endpoints"
        ],
        "operationId": "SubaccountSetPermissionsPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "ApplyToAll": {
                    "description": "This flag will allow the Main account to modify the permissions of all their sub-accounts at once, no matter if the sub account is active or inactive. This field only accepts true as a value",
                    "type": "boolean"
                  },
                  "SubaccountID": {
                    "description": "This field is to apply the permissions to only one sub-account. The option ApplyToAll will not work.",
                    "type": "string"
                  },
                  "EFTCollectEnabled": {
                    "description": "Permission related to EFT Fund, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "EFTSendEnabled": {
                    "description": "Permission related to EFT Withdraw, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "USDEFTCollectEnabled": {
                    "description": "Permission related to EFT Fund using USD currency with a Canadian bank account, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "USDEFTSendEnabled": {
                    "description": "Permission related to EFT Withdraw using USD currency with a Canadian bank account, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "RTRWithdrawEnabled": {
                    "description": "Permission related to VoPay Instant Withdraw, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "InteracMoneyRequestEnabled": {
                    "description": "Permission related to Interac Money request, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "InteracBulkPayoutEnabled": {
                    "description": "Permission related to Interac bulk payout, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "GCMEnabled": {
                    "description": "Permission related to Global cash management, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "VisaDirectEnabled": {
                    "description": "Permission related to Visa Direct, True if the user wants to enable this feature",
                    "type": "boolean"
                  },
                  "MaxFundEFTAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (EFT fund)",
                    "type": "number"
                  },
                  "MaxWithdrawEFTAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (EFT withdraw)",
                    "type": "number"
                  },
                  "MaxRTRWithdrawAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (VoPay Instant withdraw)",
                    "type": "number"
                  },
                  "MaxInteracMoneyAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (Interac Money request)",
                    "type": "number"
                  },
                  "MaxInteracBulkPayoutAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (Interac bulk payout)",
                    "type": "number"
                  },
                  "MaxGCMAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (GMC)",
                    "type": "number"
                  },
                  "MaxVisaDirectAmount": {
                    "description": "Maximum amount that the user can transfer using this endpoint (Visa Direct)",
                    "type": "number"
                  },
                  "PortalTransactionCreation": {
                    "description": "True if the user wants to enable this feature. This flag will change the user permission to the admin portal. When disabled, the user will have 'Read Only' permission and when enabled, the user will be able to create transactions using the admin portal.",
                    "type": "boolean"
                  },
                  "AutoBalanceTransferEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allow the user to set auto transfer balance",
                    "type": "boolean"
                  },
                  "PayLinkEnabled": {
                    "description": "True if the user wants to enable this feature. This flag allow the user to activate PayLink functionality",
                    "type": "boolean"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/subaccount/send-onboarding-application": {
      "post": {
        "description": "This endpoint will allow the user to resend an application to the sub-account. The sub-account must be in Application Pending status for the applicattion to be sent.",
        "summary": "account/subaccount/send-onboarding-application",
        "tags": [
          "Sub-Account Endpoints"
        ],
        "operationId": "SubaccountSendOnboardingApplicationPOST",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountID": {
                    "description": "Your account ID",
                    "type": "string"
                  },
                  "Key": {
                    "description": "API key for the account",
                    "type": "string"
                  },
                  "Signature": {
                    "description": "Hashed signature for the request",
                    "type": "string"
                  },
                  "SubaccountID": {
                    "description": "The account ID of the subaccount you are attempting to onboard",
                    "type": "string"
                  }
                },
                "required": [
                  "AccountID",
                  "Key",
                  "Signature",
                  "SubaccountID"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Success": {
                      "type": "boolean",
                      "description": "True if the request was successful, false if it failed",
                      "example": "true"
                    },
                    "ErrorMessage": {
                      "type": "string",
                      "description": "Contains a description of the error if the request failed",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://earthnode-dev.vopay.com/api/v2"
    }
  ],
  "components": {
    "requestBodies": {
      "PartnerAccountFundTransferPost": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "AccountID": {
                  "description": "Your account ID",
                  "type": "string"
                },
                "Key": {
                  "description": "API key for the account",
                  "type": "string"
                },
                "Signature": {
                  "description": "Hashed signature for the request",
                  "type": "string"
                },
                "DebitorAccountID": {
                  "description": "ID of the account transferring the funds",
                  "type": "string"
                },
                "RecipientAccountID": {
                  "description": "ID of the account receiving the funds",
                  "type": "string"
                },
                "Amount": {
                  "description": "The amount to debit from the customer's bank account.",
                  "type": "number"
                },
                "Currency": {
                  "description": "3 character currency code for the currency. If this is not specified the transaction will use the account's local currency.",
                  "type": "string"
                },
                "ClientReferenceNumber": {
                  "description": "An optional reference number to associate with the transfer",
                  "type": "string"
                },
                "Notes": {
                  "description": "An optional note to associate with the transaction.",
                  "type": "string"
                },
                "IdempotencyKey": {
                  "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                  "type": "string"
                }
              },
              "required": [
                "AccountID",
                "Key",
                "Signature",
                "DebitorAccountID",
                "RecipientAccountID",
                "Amount",
                "Currency"
              ]
            }
          }
        },
        "required": true
      },
      "AccountFundMyAccountSchedulePOST": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "AccountID": {
                  "description": "Your account ID",
                  "type": "string"
                },
                "Key": {
                  "description": "API key for the account",
                  "type": "string"
                },
                "Signature": {
                  "description": "Hashed signature for the request",
                  "type": "string"
                },
                "Amount": {
                  "description": "The amount to schedule in the transactions",
                  "type": "number"
                },
                "Frequency": {
                  "description": "The frequency of the scheduled transaction: single or recurring.",
                  "type": "string"
                },
                "NameOfFrequency": {
                  "description": "Name of frequency of the scheduled transaction (Only for recurring option), the posibles values are: weekly, biweekly, semi-monthly, monthly, bimonthly, 3 months, 6 months, yearly.",
                  "type": "string"
                },
                "ScheduleStartDate": {
                  "description": "Date from which the schedule will be started",
                  "type": "string"
                },
                "ScheduleEndDate": {
                  "description": "Date when the transaction processing will end (Only for recurring option), Either provide ScheduleEndDate or EndingAfterPayments",
                  "type": "string"
                },
                "EndingAfterPayments": {
                  "description": "Number of payments after which the transaction processing will end (Only for recurring option), Either provide ScheduleEndDate or EndingAfterPayments",
                  "type": "integer"
                },
                "SemiMonthlyFrequencyType": {
                  "description": "Type of semi-monthly frequency. This field is only required when NameOfFrequency is set to semi-monthly. The possible values are: SemiMonthFirstAndFifteenth, SemiMonthFifteenthAndLast",
                  "type": "integer"
                },
                "Description": {
                  "description": "Description of the schedule transaction",
                  "type": "string"
                },
                "ClientReferenceNumber": {
                  "description": "An optional reference number to associate with the transaction.",
                  "type": "string"
                },
                "IdempotencyKey": {
                  "description": "A unique key which the server can use to recognize and reject subsequent retries of the same request.",
                  "type": "string"
                }
              },
              "required": [
                "AccountID",
                "Key",
                "Signature",
                "Amount",
                "Frequency",
                "NameOfFrequency",
                "ScheduleStartDate",
                "ScheduleEndDate",
                "EndingAfterPayments",
                "Description"
              ]
            }
          }
        },
        "required": true
      }
    }
  }
}